# Generated by Django 4.1.7 on 2023-04-03 14:34

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import krsp.models.Services


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("password", models.CharField(max_length=255)),
                ("dob", models.DateField(null=True)),
                (
                    "gender",
                    models.CharField(
                        choices=[("0", "male"), ("1", "female"), ("2", "trans")],
                        max_length=8,
                        null=True,
                    ),
                ),
                ("phone", models.CharField(max_length=20, null=True)),
                (
                    "profile_picture",
                    models.ImageField(
                        null=True, upload_to=krsp.models.Services.upload_path
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order_user_name", models.CharField(max_length=100)),
                ("order_amount", models.CharField(max_length=25)),
                ("order_payment_id", models.CharField(max_length=100)),
                ("isPaid", models.BooleanField(default=False)),
                ("order_date", models.DateTimeField(auto_now=True)),
                ("order_email", models.EmailField(max_length=100)),
                ("order_appointment_date", models.CharField(max_length=20)),
                ("order_appointment_time", models.CharField(max_length=20)),
                ("order_contact", models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name="Scheme",
            fields=[
                ("scheme_id", models.AutoField(primary_key=True, serialize=False)),
                ("duration", models.IntegerField()),
                ("cost", models.IntegerField()),
                ("text", models.CharField(max_length=100)),
                ("scheme_name", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="Patient",
            fields=[
                ("patient_id", models.AutoField(primary_key=True, serialize=False)),
                ("create_date", models.DateField(default=None)),
                ("create_time", models.TimeField(default=None)),
                (
                    "fk_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="OTP",
            fields=[
                ("otp_id", models.AutoField(primary_key=True, serialize=False)),
                ("otp", models.CharField(max_length=4)),
                ("email", models.EmailField(max_length=254)),
                ("verified", models.BooleanField(default=False)),
                ("used", models.BooleanField(default=False)),
                ("create_time", models.DateTimeField()),
                ("expiry_time", models.DateTimeField()),
                (
                    "fk_user",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MedicalHistory",
            fields=[
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("details", models.CharField(max_length=2048)),
                ("create_date", models.DateField(default=None)),
                ("create_time", models.TimeField(default=None)),
                (
                    "fk_patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="krsp.patient"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Doctor",
            fields=[
                ("doctor_id", models.AutoField(primary_key=True, serialize=False)),
                ("experience", models.CharField(default="20 years", max_length=500)),
                (
                    "ratings",
                    models.DecimalField(decimal_places=2, default=0, max_digits=3),
                ),
                ("create_date", models.DateField(default=None)),
                ("create_time", models.TimeField(default=None)),
                (
                    "fk_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Appointment",
            fields=[
                ("appointment_id", models.AutoField(primary_key=True, serialize=False)),
                ("done", models.BooleanField(default=False)),
                ("is_canceled", models.BooleanField(default=False)),
                ("date", models.DateField()),
                ("time", models.TimeField()),
                ("create_date", models.DateField()),
                ("create_time", models.TimeField()),
                ("update_date", models.DateField()),
                ("update_time", models.TimeField()),
                (
                    "fk_doctor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="krsp.doctor"
                    ),
                ),
                (
                    "fk_patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="krsp.patient"
                    ),
                ),
                (
                    "fk_scheme",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="krsp.scheme"
                    ),
                ),
            ],
        ),
    ]
